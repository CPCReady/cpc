name: Create Release

on:
  push:
    tags:
      - 'v*.*.*'  # Ejecuta cuando se crea un tag que sigue el patrón semver (v1.0.0, v2.1.3, etc.)

permissions:
  contents: write  # Necesario para crear releases

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Obtiene todo el historial para generar changelog

      - name: Extraer información del tag
        id: tag_info
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Generar archivo de versión
        run: |
          # Crear archivo version en cfg/ como script bash para usar con source
          cat > cfg/version << 'EOF'
          #!/bin/bash
          
          VERSION="${{ steps.tag_info.outputs.tag_name }}"
          export VERSION
          EOF
          
          # Hacer el archivo ejecutable
          chmod +x cfg/version

      - name: Generar changelog
        id: changelog
        run: |
          # Obtener el tag anterior
          PREV_TAG=$(git tag --sort=-version:refname | grep -v "^${{ steps.tag_info.outputs.tag_name }}$" | head -n 1)
          
          echo "## Cambios en ${{ steps.tag_info.outputs.tag_name }}" > changelog.md
          echo "" >> changelog.md
          
          if [ ! -z "$PREV_TAG" ]; then
            echo "### Commits desde $PREV_TAG:" >> changelog.md
            echo "" >> changelog.md
            
            # Generar lista de commits
            git log --pretty=format:"- %s (%h)" "$PREV_TAG"..${{ steps.tag_info.outputs.tag_name }} >> changelog.md
          else
            echo "### Primer release:" >> changelog.md
            echo "" >> changelog.md
            git log --pretty=format:"- %s (%h)" ${{ steps.tag_info.outputs.tag_name }} >> changelog.md
          fi
          
          echo "" >> changelog.md
          echo "**Full Changelog**: https://github.com/${{ github.repository }}/compare/$PREV_TAG...${{ steps.tag_info.outputs.tag_name }}" >> changelog.md

      - name: Crear Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_info.outputs.tag_name }}
          release_name: Release ${{ steps.tag_info.outputs.tag_name }}
          body_path: changelog.md
          draft: false
          prerelease: false

      - name: Crear archivo tar.gz
        run: |
          # Crear archivo tar.gz con el contenido del proyecto (excluyendo .git y otros archivos innecesarios)
          # El archivo cfg/version ya está incluido automáticamente
          tar -czf toolchain-${{ steps.tag_info.outputs.tag_name }}.tar.gz \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='*.tar.gz' \
            --exclude='node_modules' \
            --exclude='.DS_Store' \
            .

      - name: Subir tar.gz al release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./toolchain-${{ steps.tag_info.outputs.tag_name }}.tar.gz
          asset_name: cpcready-toolchain-${{ steps.tag_info.outputs.tag_name }}.tar.gz
          asset_content_type: application/gzip

      - name: Actualizar fórmula de Homebrew
        uses: dawidd6/action-homebrew-bump-formula@v3
        with:
          # Token para acceder al repositorio de homebrew (necesitas configurar este secret)
          token: ${{ secrets.HOMEBREW_GITHUB_TOKEN }}
          # Nombre de tu fórmula (cambia "toolchain" por el nombre real de tu fórmula)
          formula: cpcready-toolchain
          # Tag será determinado automáticamente desde github.ref
          tag: ${{ github.ref }}
          # Revision será determinada automáticamente desde github.sha
          revision: ${{ github.sha }}
          # Opcional: tap personalizado si no usas homebrew/core
          # tap: tu-usuario/homebrew-tu-tap
          # Opcional: configurar usuario para el commit
          # user_name: Tu Nombre
          # user_email: tu-email@ejemplo.com